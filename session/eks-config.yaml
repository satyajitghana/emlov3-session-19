apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: basic-cluster
  region: ap-south-1
  # region: us-west-2
  version: "1.25"

managedNodeGroups:
  - name: ng-dedicated-1
    instanceType: t3a.medium
    desiredCapacity: 1
    ssh:
      allow: true # will use ~/.ssh/id_rsa.pub as the default ssh key
    iam:
      withAddonPolicies:
        autoScaler: true
        awsLoadBalancerController: true
        certManager: true
        externalDNS: true
        ebs: true
  - name: ng-spot-1
    instanceType: t3a.medium
    desiredCapacity: 5
    ssh:
      allow: true
    spot: true
    labels:
      role: spot
    propagateASGTags: true
    iam:
      withAddonPolicies:
        autoScaler: true
        awsLoadBalancerController: true
        certManager: true
        externalDNS: true
        ebs: true
  - name: ng-gpu-spot-1
    instanceType: g4dn.xlarge
    desiredCapacity: 1
    ssh:
      allow: true
    spot: true
    labels:
      role: spot
    propagateASGTags: true
    iam:
      withAddonPolicies:
        autoScaler: true
        awsLoadBalancerController: true
        certManager: true
        externalDNS: true
        ebs: true

# helm install istio-ingress istio/gateway -n istio-ingress \
# 	--set "labels.istio=ingressgateway" \
#   --set service.annotations."service\.beta\.kubernetes\.io/aws-load-balancer-type"="nlb" \
#   --set service.annotations."service\.beta\.kubernetes\.io/aws-load-balancer-scheme"="internet-facing" \
#   --set service.annotations."service\.beta\.kubernetes\.io/aws-load-balancer-attributes"="load_balancing.cross_zone.enabled=true" \
#   --wait

# kubectl get crd gateways.gateway.networking.k8s.io &> /dev/null || \
#   { kubectl kustomize "github.com/kubernetes-sigs/gateway-api/config/crd?ref=v0.8.0" | kubectl apply -f -; }